/* tslint:disable */
/* eslint-disable */
/**
 * JS-SS21 API Documentation
 * API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SearchJobDto
 */
export interface SearchJobDto {
	/**
	 *
	 * @type {string}
	 * @memberof SearchJobDto
	 */
	searchString: string;
	/**
	 *
	 * @type {string}
	 * @memberof SearchJobDto
	 */
	workArea: string;
	/**
	 *
	 * @type {number}
	 * @memberof SearchJobDto
	 */
	workBasis: number;
	/**
	 *
	 * @type {string[]}
	 * @memberof SearchJobDto
	 */
	languages: string[];
	/**
	 *
	 * @type {string[]}
	 * @memberof SearchJobDto
	 */
	skills: string[];
	/**
	 *
	 * @type {Date}
	 * @memberof SearchJobDto
	 */
	from: Date;
	/**
	 *
	 * @type {Date}
	 * @memberof SearchJobDto
	 */
	to: Date;
	/**
	 *
	 * @type {number}
	 * @memberof SearchJobDto
	 */
	skip: number;
	/**
	 *
	 * @type {number}
	 * @memberof SearchJobDto
	 */
	limit: number;
}

export function SearchJobDtoFromJSON(json: any): SearchJobDto {
	return SearchJobDtoFromJSONTyped(json, false);
}

export function SearchJobDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchJobDto {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		searchString: json['searchString'],
		workArea: json['workArea'],
		workBasis: json['workBasis'],
		languages: json['languages'],
		skills: json['skills'],
		from: new Date(json['from']),
		to: new Date(json['to']),
		skip: json['skip'],
		limit: json['limit'],
	};
}

export function SearchJobDtoToJSON(value?: SearchJobDto | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		searchString: value.searchString,
		workArea: value.workArea,
		workBasis: value.workBasis,
		languages: value.languages,
		skills: value.skills,
		from: value.from.toISOString(),
		to: value.to.toISOString(),
		skip: value.skip,
		limit: value.limit,
	};
}
